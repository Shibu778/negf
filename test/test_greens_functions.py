import sys
import matplotlib.pyplot as plt
import numpy as np
import tb
from negf.hamiltonian_chain import HamiltonianChain
from negf.recursive_greens_functions import recursive_gf

np.warnings.filterwarnings('ignore')


def simple_chain_greens_function(energy, h_0, h_r):
    """
    Analytical expression for the chain response function
    according to []

    :param energy:
    :param h_0:
    :param h_r:
    :return:
    """

    gf = (energy - h_0) / (2 * h_r ** 2)

    for j, E in enumerate(energy):
        if E - h_0 <= -2 * h_r:
            gf[0, j] = gf[0, j] + 1.0 / (2 * h_r ** 2) * np.sqrt((E - h_0) ** 2 - 4 * h_r ** 2)
        elif E - h_0 >= 2 * h_r:
            gf[0, j] = gf[0, j] - 1.0 / (2 * h_r ** 2) * np.sqrt((E - h_0) ** 2 - 4 * h_r ** 2)
        else:
            gf[0, j] = gf[0, j] - 1.0j / (2 * h_r ** 2) * np.sqrt(4 * h_r ** 2 - (E - h_0) ** 2)

    return gf


def single_atom_chain():
    """
    Test set for a single-atom chain.

    :return:
    """

    sys.path.insert(0, '/home/mk/TB_project/tb')

    a = tb.Atom('A')
    a.add_orbital('s', 0.7)
    tb.Atom.orbital_sets = {'A': a}
    tb.set_tb_params(PARAMS_A_A={'ss_sigma': 0.5})

    xyz_file = """1
    H cell
    A1       0.0000000000    0.0000000000    0.0000000000
    """

    h = tb.Hamiltonian(xyz=xyz_file, nn_distance=1.1)
    h.initialize()
    h.set_periodic_bc([[0, 0, 1.0]])
    h_l, h_0, h_r = h.get_coupling_hamiltonians()
    num_sites = h_0.shape[0]

    energy = np.linspace(-3.0, 3.0, 300)

    tr = np.zeros((energy.shape[0]))
    dos = np.zeros((energy.shape[0]))

    sgf_l = []
    sgf_r = []

    for j, E in enumerate(energy):
        se_l, se_r = tb.surface_greens_function(E, h_l, h_0, h_r)
        sgf_l.append(se_l)
        sgf_r.append(se_r)
        gf = np.linalg.pinv(E * np.identity(num_sites) - h_0 - se_l - se_r)
        gf = np.matrix(gf)
        gamma_l = 1j * (np.matrix(se_l) - np.matrix(se_l).H)
        gamma_r = 1j * (np.matrix(se_r) - np.matrix(se_r).H)
        tr[j] = np.real(np.trace(gamma_l * gf * gamma_r * gf.H))
        dos[j] = np.real(np.trace(1j * (gf - gf.H)))

    sgf_l = np.array(sgf_l)
    sgf_r = np.array(sgf_r)

    np.testing.assert_allclose(sgf_l, sgf_r, atol=1e-5)
    expected = h_l * simple_chain_greens_function(energy, h_0, h_r) * h_r
    np.testing.assert_allclose(np.squeeze(sgf_r), np.squeeze(expected), atol=1e-5)

    return energy, dos, tr, h, sgf_l, sgf_r


def complex_chain():
    sys.path.insert(0, '/home/mk/TB_project/tb')

    a = tb.Atom('A')
    a.add_orbital('s', -0.7)
    b = tb.Atom('B')
    b.add_orbital('s', -0.5)
    c = tb.Atom('C')
    c.add_orbital('s', -0.3)

    tb.Atom.orbital_sets = {'A': a, 'B': b, 'C': c}

    tb.set_tb_params(PARAMS_A_A={'ss_sigma': -0.5},
                     PARAMS_B_B={'ss_sigma': -0.5},
                     PARAMS_A_B={'ss_sigma': -0.5},
                     PARAMS_B_C={'ss_sigma': -0.5},
                     PARAMS_A_C={'ss_sigma': -0.5})

    xyz_file = """4
    H cell
    A1       0.0000000000    0.0000000000    0.0000000000
    B2       0.0000000000    0.0000000000    1.0000000000
    A2       0.0000000000    1.0000000000    0.0000000000
    B3       0.0000000000    1.0000000000    1.0000000000
    """

    h = tb.Hamiltonian(xyz=xyz_file, nn_distance=1.1)
    h.initialize()
    h.set_periodic_bc([[0, 0, 2.0]])
    h_l, h_0, h_r = h.get_coupling_hamiltonians()

    energy = np.linspace(-3.0, 1.5, 700)

    sgf_l = []
    sgf_r = []

    for E in energy:
        L, R = tb.surface_greens_function(E, h_l, h_0, h_r, iterate=True)
        sgf_l.append(L)
        sgf_r.append(R)

    sgf_l = np.array(sgf_l)
    sgf_r = np.array(sgf_r)

    num_sites = h_0.shape[0]
    gf = np.linalg.pinv(np.multiply.outer(energy, np.identity(num_sites)) - h_0 - sgf_l - sgf_r)

    tr = np.zeros((energy.shape[0]))
    dos = np.zeros((energy.shape[0]))

    for j, E in enumerate(energy):
        gf0 = np.matrix(gf[j, :, :])
        gamma_l = 1j * (np.matrix(sgf_l[j, :, :]) - np.matrix(sgf_l[j, :, :]).H)
        gamma_r = 1j * (np.matrix(sgf_r[j, :, :]) - np.matrix(sgf_r[j, :, :]).H)
        tr[j] = np.real(np.trace(gamma_l * gf0 * gamma_r * gf0.H))
        dos[j] = np.real(np.trace(1j * (gf0 - gf0.H)))

    np.testing.assert_allclose(dos, expected_dos_of_complex_chain(), atol=1e-5)
    np.testing.assert_allclose(tr, expected_tr_of_complex_chain(), atol=1e-5)

    return energy, dos, tr, h, sgf_l, sgf_r


def run_for_periods(single_period_test, periods):
    energy, dos, tr, h, sgf_l, sgf_r = single_period_test()
    h_l, h_0, h_r = h.get_coupling_hamiltonians()
    cell = h.ct.pcv

    h_chain = HamiltonianChain(h_l, h_0, h_r, h.get_site_coordinates())
    h_chain.translate(cell[0], periods, periods)

    num_sites = h_0.shape[0]
    num_sites1 = 2 * periods * num_sites + num_sites
    num_periods = 2 * periods + 1

    tr1 = np.zeros((energy.shape[0]))
    dos1 = np.zeros((energy.shape[0]))

    for j, E in enumerate(energy):
        h_chain.add_self_energies(sgf_l[j, :, :], sgf_r[j, :, :])
        gf = np.linalg.pinv(E * np.identity(num_sites1) - h_chain.get_matrix())
        h_chain.remove_self_energies()
        gf = np.matrix(gf)
        se_l, se_r = h_chain.translate_self_energies(sgf_l[j, :, :], sgf_r[j, :, :])

        gamma_l = 1j * (np.matrix(se_l) - np.matrix(se_l).H)
        gamma_r = 1j * (np.matrix(se_r) - np.matrix(se_r).H)
        tr1[j] = np.real(np.trace(gamma_l * gf * gamma_r * gf.H))
        dos1[j] = np.real(np.trace(1j * (gf - gf.H))) / num_periods

    print('hi')
    np.testing.assert_allclose(dos, dos1, atol=1e-2)
    np.testing.assert_allclose(tr, tr1, atol=1e-2)


def run_for_periods_recursive(single_period_test, periods):
    energy, dos, tr, h, sgf_l, sgf_r = single_period_test()
    h_l, h_0, h_r = h.get_coupling_hamiltonians()
    cell = h.ct.pcv

    h_chain = HamiltonianChain(h_l, h_0, h_r, h.get_site_coordinates())
    h_chain.translate(cell[0], periods, periods)

    num_sites = h_0.shape[0]
    num_sites1 = 2 * periods * num_sites + num_sites
    num_periods = 2 * periods + 1

    dos1 = np.zeros((energy.shape[0]))

    for j, E in enumerate(energy):

        h_chain.add_self_energies(sgf_l[j, :, :], sgf_r[j, :, :])
        grd, grl, gru, gr_left = recursive_gf(E, h_chain.h_l, h_chain.h_0, h_chain.h_r)
        h_chain.remove_self_energies()

        for jj in range(len(grd)):
            dos1[j] = dos1[j] + np.real(np.trace(1j * (grd[jj] - grd[jj].H))) / num_periods

    np.testing.assert_allclose(dos, dos1, atol=1e-2)


def test_gf_single_atom_chain_several_periods():
    for j in range(5):
        run_for_periods(single_atom_chain, periods=j)


def test_gf_complex_chain_several_periods():
    for j in range(5):
        run_for_periods(complex_chain, periods=j)


def test_gf_single_atom_chain_several_periods_recursive():
    for j in range(5):
        run_for_periods_recursive(single_atom_chain, periods=j)


def test_gf_complex_chain_several_periods_recursive():
    for j in range(5):
        run_for_periods_recursive(complex_chain, periods=j)


def expected_dos_of_complex_chain():
    return np.array([0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     3.58526226e+01, 2.52309578e+01, 2.05920504e+01, 1.78443275e+01,
                     1.59774677e+01, 1.46039572e+01, 1.35396257e+01, 1.26840534e+01,
                     1.19771468e+01, 1.13805881e+01, 1.08685779e+01, 1.04230386e+01,
                     1.00308345e+01, 9.68228758e+00, 9.36993944e+00, 9.08802580e+00,
                     8.83197991e+00, 8.59815545e+00, 8.38355456e+00, 8.18576228e+00,
                     8.00272995e+00, 7.83276777e+00, 7.67442053e+00, 7.52646901e+00,
                     7.38786977e+00, 7.25769907e+00, 7.13517654e+00, 7.01961010e+00,
                     6.91039195e+00, 6.80699028e+00, 6.70893121e+00, 6.61579689e+00,
                     6.52721036e+00, 6.44283475e+00, 6.36236826e+00, 6.28554071e+00,
                     6.21210365e+00, 6.14183347e+00, 6.07452902e+00, 6.01000407e+00,
                     5.94809070e+00, 5.88863515e+00, 5.83149300e+00, 5.77653664e+00,
                     5.72364705e+00, 5.67270610e+00, 5.62362221e+00, 5.57629511e+00,
                     5.53063550e+00, 5.48656694e+00, 5.44401019e+00, 5.40289578e+00,
                     5.36315917e+00, 5.32473778e+00, 5.28757669e+00, 5.25162120e+00,
                     5.21682148e+00, 5.18312986e+00, 5.15050505e+00, 5.11890463e+00,
                     5.08828910e+00, 5.05862651e+00, 5.02987928e+00, 5.00201599e+00,
                     4.97500840e+00, 4.94882668e+00, 4.92344731e+00, 4.89884275e+00,
                     4.87499283e+00, 4.85187279e+00, 4.82946484e+00, 4.80774871e+00,
                     4.78670595e+00, 4.76632315e+00, 4.74658243e+00, 4.72746908e+00,
                     4.70897064e+00, 4.69107665e+00, 4.67377421e+00, 4.65705346e+00,
                     4.64090653e+00, 4.62532414e+00, 4.61029955e+00, 4.59582733e+00,
                     4.58190146e+00, 4.56851861e+00, 4.55567665e+00, 4.54337296e+00,
                     4.53160472e+00, 4.52037660e+00, 4.50968799e+00, 4.49954060e+00,
                     4.48994245e+00, 4.48089545e+00, 4.47241082e+00, 4.46449523e+00,
                     4.45715953e+00, 4.45041841e+00, 4.44428631e+00, 4.43878120e+00,
                     4.43392275e+00, 4.42973554e+00, 4.42624701e+00, 4.42348744e+00,
                     4.42149136e+00, 4.42029845e+00, 4.41995607e+00, 4.42051406e+00,
                     4.42203280e+00, 4.42458011e+00, 4.42823269e+00, 4.43307925e+00,
                     4.43922272e+00, 4.44678172e+00, 4.45588924e+00, 4.46670919e+00,
                     4.47942450e+00, 4.49425279e+00, 4.51145153e+00, 4.53132857e+00,
                     4.55424719e+00, 4.58064842e+00, 4.61106984e+00, 4.64616559e+00,
                     4.68675860e+00, 4.73386696e+00, 4.78879196e+00, 4.85321668e+00,
                     4.92935723e+00, 5.02017906e+00, 5.12976246e+00, 5.26389582e+00,
                     5.43105023e+00, 5.64423739e+00, 5.92452994e+00, 6.30881025e+00,
                     6.86862524e+00, 7.76676464e+00, 9.48987727e+00, 1.48109557e+01,
                     1.87159133e-07, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.41738661e+01,
                     2.76592853e+01, 2.18404269e+01, 1.86327126e+01, 1.65318268e+01,
                     1.50206541e+01, 1.38673800e+01, 1.29503321e+01, 1.21989525e+01,
                     1.15689507e+01, 1.10310822e+01, 1.05650289e+01, 1.01562931e+01,
                     9.79412929e+00, 9.47041503e+00, 9.17891970e+00, 2.85359361e+01,
                     1.89477566e+01, 1.65617138e+01, 1.53142823e+01, 1.44988188e+01,
                     1.39028089e+01, 1.34372657e+01, 1.30574115e+01, 1.27378947e+01,
                     1.24630418e+01, 1.22225769e+01, 1.20093977e+01, 1.18183927e+01,
                     1.16458031e+01, 1.14887390e+01, 1.13449550e+01, 1.12126719e+01,
                     1.10904484e+01, 1.09771158e+01, 1.08716859e+01, 1.07733443e+01,
                     1.06813922e+01, 1.05952408e+01, 1.05143748e+01, 1.04383536e+01,
                     1.03667918e+01, 1.02993458e+01, 1.02357182e+01, 1.01756413e+01,
                     1.01188816e+01, 1.00652286e+01, 1.00144902e+01, 9.96649835e+00,
                     9.92110092e+00, 9.87815268e+00, 9.83753691e+00, 9.79913578e+00,
                     9.76284140e+00, 9.72856180e+00, 9.69621463e+00, 9.66571585e+00,
                     9.63699407e+00, 9.60998574e+00, 9.58462917e+00, 9.56086916e+00,
                     9.53865368e+00, 9.51793791e+00, 9.49868368e+00, 9.48084610e+00,
                     9.46439331e+00, 9.44929352e+00, 9.43551867e+00, 9.42304214e+00,
                     9.41184327e+00, 9.40189781e+00, 9.39319150e+00, 9.38570778e+00,
                     9.37943252e+00, 9.37435533e+00, 9.37046641e+00, 9.36776176e+00,
                     9.36623561e+00, 9.36588216e+00, 9.36670401e+00, 9.36870251e+00,
                     9.37187881e+00, 9.37624308e+00, 9.38179775e+00, 9.38855564e+00,
                     9.39652768e+00, 9.40572757e+00, 9.41617064e+00, 9.42787932e+00,
                     9.44087146e+00, 9.45517327e+00, 9.47081120e+00, 9.48781253e+00,
                     9.50621336e+00, 9.52604857e+00, 9.54735787e+00, 9.57018404e+00,
                     9.59457771e+00, 9.62058868e+00, 9.64827488e+00, 9.67769693e+00,
                     9.70892862e+00, 9.74203917e+00, 9.77711266e+00, 9.81423695e+00,
                     9.85351333e+00, 9.89504643e+00, 9.93895691e+00, 9.98537443e+00,
                     1.00344453e+01, 1.00863283e+01, 1.01411975e+01, 1.01992577e+01,
                     1.02607277e+01, 1.03258488e+01, 1.03949028e+01, 1.04682081e+01,
                     1.05461183e+01, 1.06290426e+01, 1.07174474e+01, 1.08118792e+01,
                     1.09129663e+01, 1.10214523e+01, 1.11382132e+01, 1.12643030e+01,
                     1.14009953e+01, 1.15498590e+01, 1.17128300e+01, 1.18924001e+01,
                     1.20917505e+01, 1.23151427e+01, 1.25683691e+01, 1.28596180e+01,
                     1.32009791e+01, 1.36112757e+01, 1.41219955e+01, 1.47910695e+01,
                     1.57411400e+01, 1.72977702e+01, 2.08273379e+01, 9.01679651e+00,
                     9.29199583e+00, 9.59571546e+00, 9.93397351e+00, 1.03136638e+01,
                     1.07438646e+01, 1.12366312e+01, 1.18085085e+01, 1.24828814e+01,
                     1.32940948e+01, 1.42950713e+01, 1.55726977e+01, 1.72820708e+01,
                     1.97356346e+01, 2.36933391e+01, 3.17835081e+01, 7.19547608e+01,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.16864219e+01,
                     8.63593470e+00, 7.34869242e+00, 6.61644912e+00, 6.13918545e+00,
                     5.80249644e+00, 5.55233547e+00, 5.35952412e+00, 5.20683013e+00,
                     5.08335665e+00, 4.98185942e+00, 4.89732784e+00, 4.82618124e+00,
                     4.76578437e+00, 4.71416340e+00, 4.66980256e+00, 4.63151812e+00,
                     4.59837859e+00, 4.56963573e+00, 4.54468990e+00, 4.52303441e+00,
                     4.50426975e+00, 4.48805197e+00, 4.47409782e+00, 4.46216530e+00,
                     4.45205208e+00, 4.44357968e+00, 4.43660222e+00, 4.43099118e+00,
                     4.42663285e+00, 4.42343321e+00, 4.42130526e+00, 4.42017807e+00,
                     4.41998737e+00, 4.42067610e+00, 4.42219473e+00, 4.42450154e+00,
                     4.42755658e+00, 4.43132867e+00, 4.43578657e+00, 4.44090674e+00,
                     4.44666467e+00, 4.45304391e+00, 4.46002283e+00, 4.46759288e+00,
                     4.47573808e+00, 4.48444939e+00, 4.49371702e+00, 4.50353585e+00,
                     4.51389934e+00, 4.52480385e+00, 4.53624851e+00, 4.54823111e+00,
                     4.56074922e+00, 4.57380753e+00, 4.58740756e+00, 4.60154953e+00,
                     4.61624339e+00, 4.63148915e+00, 4.64729740e+00, 4.66367244e+00,
                     4.68062540e+00, 4.69816360e+00, 4.71629745e+00, 4.73503995e+00,
                     4.75440222e+00, 4.77439933e+00, 4.79504411e+00, 4.81635241e+00,
                     4.83834542e+00, 4.86103285e+00, 4.88444325e+00, 4.90859361e+00,
                     4.93350563e+00, 4.95920255e+00, 4.98571104e+00, 5.01305681e+00,
                     5.04127044e+00, 5.07037937e+00, 5.10041930e+00, 5.13142406e+00,
                     5.16342845e+00, 5.19647570e+00, 5.23060409e+00, 5.26585979e+00,
                     5.30229457e+00, 5.33995086e+00, 5.37889178e+00, 5.41917306e+00,
                     5.46085467e+00, 5.50400742e+00, 5.54870127e+00, 5.59501808e+00,
                     5.64304019e+00, 5.69285318e+00, 5.74456150e+00, 5.79826345e+00,
                     5.85407954e+00, 5.91212999e+00, 5.97255288e+00, 6.03548929e+00,
                     6.10110601e+00, 6.16957452e+00, 6.24108115e+00, 6.31585029e+00,
                     6.39410188e+00, 6.47609822e+00, 6.56212147e+00, 6.65248637e+00,
                     6.74754359e+00, 6.84768438e+00, 6.95335563e+00, 7.06504596e+00,
                     7.18331958e+00, 7.30880942e+00, 7.44225092e+00, 7.58447704e+00,
                     7.73645020e+00, 7.89928242e+00, 8.07429015e+00, 8.26299851e+00,
                     8.46725204e+00, 8.68921929e+00, 8.93155426e+00, 9.19745458e+00,
                     9.49093490e+00, 9.81698280e+00, 1.01819794e+01, 1.05942133e+01,
                     1.10644956e+01, 1.16078278e+01, 1.22448634e+01, 1.30057240e+01,
                     1.39359417e+01, 1.51085435e+01, 1.66499808e+01, 1.88035576e+01,
                     2.21188098e+01, 2.82356093e+01, 4.66591530e+01, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                     0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00])


def expected_tr_of_complex_chain():
    return np.array([9.06775691e-28, -4.02196659e-29, -2.32272446e-27, 2.55896492e-27,
                     3.10767158e-26, 7.98206091e-27, 3.72321088e-28, 8.34796381e-27,
                     -2.73893887e-29, 5.70651387e-29, 1.85291203e-27, -7.34000792e-28,
                     -1.45943309e-27, -1.20230158e-26, 4.59944425e-27, 1.27694890e-27,
                     -1.18375746e-26, -3.18326622e-28, 5.33205883e-28, 2.87212068e-27,
                     3.13611275e-27, -1.53170076e-27, -1.13188625e-27, -5.20447374e-28,
                     -3.25662711e-27, -1.76914892e-28, 2.58042897e-27, 4.53001714e-27,
                     8.68371193e-27, 2.96195883e-27, 8.54326589e-27, -1.13179520e-27,
                     -2.89466242e-27, -1.87905437e-26, 1.47969570e-27, 9.30053359e-27,
                     7.57215868e-27, 9.28011901e-27, -4.01132686e-26, -7.17100676e-27,
                     -2.78666385e-26, 2.79944523e-26, 4.53762124e-26, 5.85284189e-26,
                     -1.85675066e-26, 6.23137697e-26, -3.53186750e-26, -2.06908663e-27,
                     1.43010743e-26, -5.06694880e-27, -5.38739701e-28, 2.67377909e-27,
                     1.43303757e-26, 2.09362811e-26, 7.44236681e-26, -1.38353190e-25,
                     -1.38370886e-26, 7.90817014e-26, 3.13537643e-26, -8.61549572e-26,
                     -9.15887366e-26, -6.88088852e-26, 2.62293412e-25, 5.42952466e-26,
                     -8.19039184e-28, 1.44229443e-26, 6.78173949e-25, -2.48061349e-25,
                     4.42525685e-25, 5.17030413e-26, 7.30400945e-25, -2.48224400e-25,
                     -3.30819162e-25, -1.47429621e-25, -1.08941488e-24, 2.30318339e-24,
                     -2.32558650e-24, 3.98593924e-26, -3.67450969e-25, 1.87945840e-25,
                     -1.00749300e-25, 9.93254963e-26, -1.92460719e-26, -2.36812908e-25,
                     4.34856815e-24, -2.78504700e-25, -7.39678748e-26, 1.10591170e-25,
                     6.88682324e-25, -9.60966760e-25, -1.87112201e-25, -1.76471320e-25,
                     -1.01498753e-23, 1.14933835e-24, -2.71566239e-24, 3.19552570e-24,
                     -2.44235805e-23, 2.68131919e-23, 1.44961574e-23, 1.72763353e-23,
                     1.41456590e-23, 7.87378241e-24, 2.37197059e-23, 3.06567094e-23,
                     7.55347987e-23, -1.33994254e-23, -1.50454442e-23, -1.62163179e-23,
                     -1.81415003e-23, 2.73971336e-23, 1.86721570e-22, -7.39689795e-23,
                     -2.74543620e-22, -3.38027347e-22, 9.04858747e-22, -7.80513134e-22,
                     -1.10936512e-21, 3.32542650e-21, 3.32541893e-21, -2.33796132e-20,
                     1.06091104e-21, -1.07613717e-21, -8.37819188e-23, 2.34653309e-21,
                     -3.51507555e-21, 7.08172063e-22, -1.05178821e-21, 1.30870724e-22,
                     3.18992900e-21, 6.35410379e-22, 6.80606554e-21, -3.41926635e-22,
                     -6.73136021e-21, 3.89628487e-20, -3.64123718e-21, -7.85257507e-21,
                     6.16215982e-21, 2.14462993e-20, -2.31304210e-20, 2.78053338e-18,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     -1.19015836e-15, 1.06982939e-16, 1.69053117e-15, 1.54913250e-15,
                     -2.57149727e-15, -5.23895973e-15, 1.13412421e-15, -2.02047254e-15,
                     -5.96997863e-15, 3.11731679e-15, 5.32365911e-16, 1.93035861e-15,
                     -2.07709591e-16, 2.38348585e-16, 1.17420115e-14, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 2.00000000e+00,
                     2.00000000e+00, 2.00000000e+00, 2.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     4.08928094e-15, 2.77986724e-14, -6.81784114e-15, -2.91109369e-16,
                     -1.02404631e-15, 7.11428262e-16, -4.67494051e-15, 1.15022921e-15,
                     -1.63307036e-15, -1.64403503e-15, -2.80027000e-16, 9.09996044e-17,
                     -6.90346545e-18, 3.41357760e-16, -4.35235176e-10, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
                     1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 3.22905207e-20,
                     -3.15847037e-19, -1.88282951e-20, -2.61103675e-21, 3.05997166e-22,
                     1.66010068e-20, -2.05620227e-22, 2.43744684e-23, -1.17090147e-21,
                     2.97952866e-21, -6.18234319e-22, 3.24766274e-22, 1.22056281e-22,
                     2.09428945e-21, 2.50836262e-22, -5.47983969e-22, 5.40466805e-22,
                     2.44103593e-25, 9.40055047e-21, 6.36976207e-21, 5.44536749e-21,
                     9.58324162e-22, -1.22618075e-21, -1.82321116e-21, 3.08940886e-22,
                     -4.53802762e-22, -1.57104276e-22, 2.66882293e-24, -2.76515500e-23,
                     -1.00256690e-22, -5.48641552e-23, -1.32475167e-23, -1.55915159e-22,
                     6.17595458e-23, 6.46316672e-23, -7.61547145e-24, -1.52297529e-23,
                     8.86790444e-24, -1.04504103e-23, 3.37603503e-23, -4.17619827e-24,
                     5.94044138e-25, -1.09224028e-23, 7.64531567e-24, 1.74363196e-24,
                     1.29541996e-23, 1.77215937e-24, 2.19325283e-24, -3.44965612e-24,
                     -6.51082079e-24, 1.30957976e-24, 1.37004128e-23, 1.45168638e-24,
                     3.46866495e-24, 2.29926262e-25, -3.82677836e-25, 1.41816043e-24,
                     -1.53479205e-24, -7.67157037e-25, -5.65711089e-26, -1.69722284e-25,
                     5.49853053e-26, -9.22698761e-25, -1.73394674e-26, 2.06868779e-25,
                     -1.48327930e-25, 3.46336548e-25, -4.24732242e-28, 2.61441071e-25,
                     1.30769535e-25, -8.13155848e-26, 1.81442302e-25, -3.55551464e-26,
                     1.38411490e-25, -5.11395595e-26, 1.44677651e-25, 1.78535619e-25,
                     9.47344403e-26, 3.68551465e-25, 1.32582063e-25, -2.75561482e-25,
                     8.07626766e-26, -1.11301228e-25, 4.17297901e-26, 1.03108551e-25,
                     -5.10198469e-29, -8.43215604e-26, -4.47611176e-26, 4.14059862e-25,
                     1.58010157e-25, -4.48767134e-28, 5.25952736e-26, -7.45210260e-26])


if __name__ == '__main__':

    test_gf_single_atom_chain_several_periods()
    test_gf_complex_chain_several_periods()
    test_gf_single_atom_chain_several_periods_recursive()
    test_gf_complex_chain_several_periods_recursive()
